# name: Integration SQL Server Database

# on:
#   push:
#     branches: ["main"]
#   pull_request:
#     branches: ["main"]

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - name: Set up .NET Core
#         uses: actions/setup-dotnet@v1
#         with:
#           dotnet-version: '6.0.x'
#       - name: Build with MSBuild
#         run: |
#           msbuild /t:Build /p:Configuration=Release ./TimeTac.Database/TimeTac.Database.sqlproj
#       - name: Publish to SQL Server
#         run: |
#           sqlpackage.exe /a:Publish /tsn:(localDb)\MSSQLLocalDB /tdn:TimeTac /tu:myuser /tp:mypassword /sf:./TimeTac/bin/Release/TimeTac.dacpac

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Build and Deploy SQL Server Database
#       uses: actions/checkout@v3
#     # - uses: azure/sql-action@v2.2
#     #   with:   
#     #     server-name: ${{ secrets.SERVER_NAME }}    
#     #     connection-string: ${{ secrets.AZURE_SQL_CONNECTION_STRING }}
#     #     path: './TimeTac.Database/TimeTac.Database.sqlproj'
#     #     action: 'publish'
#     - run: |
#         msbuild /t:Build /p:Configuration=Release ./TimeTac.Database/TimeTac.Database.sqlproj
#         sqlpackage.exe /a:Publish /tsn:(localDb)\MSSQLLocalDB /tdn:MyDatabase /tu:myuser /tp:mypassword /sf:./MyDatabase/bin/Release/MyDatabase.dacpac

# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

# trigger:
# - main

# pool:
#   vmImage: 'windows-latest'

# variables:
#   solution: '**/*.sln'
#   buildPlatform: 'Any CPU'
#   buildConfiguration: 'Release'

# steps:
# - task: NuGetToolInstaller@1

# - task: NuGetCommand@2
#   inputs:
#     restoreSolution: '$(solution)'

# - task: VSBuild@1
#   inputs:
#     solution: '$(solution)'
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'

# - task: VSTest@2
#   inputs:
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'
    
# - task: CopyFiles@2
#   inputs:
#     SourceFolder: '$(System.DefaultWorkingDirectory)'
#     Contents: 'SQLDatabase\bin\Release\SQLDatabase.dacpac'
#     TargetFolder: '$(Build.ArtifactStagingDirectory)'

# - task: PublishBuildArtifacts@1
#   inputs:
#     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#     ArtifactName: 'drop'
#     publishLocation: 'Container'

# name: Integration SQL Server Database

# on:
#   push:
#     branches: ["main"]
#   pull_request:
#     branches: ["main"]

# jobs:
#   build:
#     runs-on: self-hosted
#     steps:
#     - uses: actions/checkout@v3
#     - uses: azure/login@v1
#       with:
#         creds: ${{ secrets.AZURE_CREDENTIALS }}
#     - uses: azure/sql-action@v2.2
#       with:        
#         connection-string: ${{ secrets.AZURE_SQL_CONNECTION_STRING }}
#         server-name: ${{ secrets.SERVER_NAME }} 
#         path: './TimeTac.Database/TimeTac.Database.sqlproj'
#         action: 'publish'
#         build-arguments: '-c Release'                
#         arguments: '/p:DropObjectsNotInSource=true'   
#     - run: |
#         msbuild /t:Build /p:Configuration=Release ./TimeTac.Database/TimeTac.Database.sqlproj
#         sqlpackage.exe /a:Publish /tsn:(localDb)\MSSQLLocalDB /tdn:TimeTac /tu:myuser /tp:mypassword /sf:./TimeTac/bin/Release/TimeTac.dacpac

# jobs:
#   build:
#     runs-on: windows-latest
#     steps:
#     - uses: actions/checkout@v2
#     - name: Setup MSBuild.exe
#       uses: microsoft/setup-msbuild@v1.0.3
#     - name: Build solution
#       run: msbuild /t:Build /p:Configuration=Release ./TimeTac.Database/TimeTac.Database.sqlproj
#     - name: Azure sql actions
#       uses: azure/sql-action@v2.2
#       with:   
#         server-name: (localDb)\MSSQLLocalDB  
#         connection-string: Server=localhost\SQLEXPRESS01;Database=TimeTac;User Id=myuser;Password=mypassword;
#         path: './TimeTac.Database/TimeTac.Database.sqlproj'
#         action: 'publish'
#     - name: Publish to MSBuild SSMS
#       # run: sqlpackage.exe /a:Publish /tsn:(localDb)\MSSQLLocalDB /tdn:TimeTac /tu:myuser /tp:mypassword /sf:./TimeTac/bin/Release/TimeTac.dacpac
#       run: sqlpackage.exe /a:Publish /tsn:(localDb)\MSSQLLocalDB /tdn:TimeTac /tu:myuser /tp:mypassword /sf:./TimeTac/bin/Release/TimeTac.dacpac

name: Integration SQL Server Database

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    # defaults:
    #   run:
    #     shell: bash
    #     working-directory: F:\Mine\TimeTac\TimeTac.Database\TimeTac.Database\
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0.x'
    - name: Build with dotnet
      run: dotnet build --configuration Release
      working-directory: F:\Mine\TimeTac\TimeTac.Database\TimeTac.Database\
    - name: Publish to SQL Server
      uses: Azure/sql-action@v1.0.0
      with:
        server-name: (localDb)\MSSQLLocalDB  
        connection-string: Server=(localDb)\MSSQLLocalDB;Integrated Security=True;Persist Security Info=False;Pooling=False;Multiple Active Result Sets=False;Connect Timeout=60;Encrypt=False;Trust Server Certificate=False;Command Timeout=0
        dacpac-package: ./bin/Release/TimeTac.Database.dacpac
